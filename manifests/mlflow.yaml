---
# Source: mlflow/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  labels:
    app.kubernetes.io/name: mlflow
    helm.sh/chart: mlflow-1.4.0
    app.kubernetes.io/instance: mlflow
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: mlflow
---
# Source: mlflow/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  labels:
    app.kubernetes.io/name: mlflow
    helm.sh/chart: mlflow-1.4.0
    app.kubernetes.io/instance: mlflow
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mlflow
      app.kubernetes.io/instance: mlflow
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlflow
        app.kubernetes.io/instance: mlflow
    spec: 
      imagePullSecrets:
        - name: regcred
      containers:
        - name: mlflow
          image: "alborotogarcia/arm64v8:arm-mlflow"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          args:
            - "--default-artifact-root $(ARTIFACT_ROOT_ENV_VAR)"
          #  - "--backend-store-uri $(BACKEND_STORE_URI)"
          env:
          - name: BACKEND_STORE_URI_ENV_VAR
            valueFrom:
              secretKeyRef:
                name: storage-secrets
                key: backend_store_uri
          - name: ARTIFACT_ROOT_ENV_VAR
            value: s3://mlflow/testbucket
          - name: MLFLOW_S3_ENDPOINT_URL
            valueFrom:
              secretKeyRef:
                name: storage-secrets
                key: MINIO_ENDPOINT
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: storage-secrets
                key: MINIO_ACCESS_KEY
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: storage-secrets
                key: MINIO_SECRET_KEY
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
          # volumeMounts:
          #   - mountPath: "/export"
          #     name: minio

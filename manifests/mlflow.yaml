---
# Source: mlflow/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  labels:
    app.kubernetes.io/name: mlflow
    helm.sh/chart: mlflow-1.4.0
    app.kubernetes.io/instance: mlflow
    app.kubernetes.io/managed-by: Helm
spec:
  type: NodePort
  ports:
    - port: 5000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mlflow
    app.kubernetes.io/instance: mlflow
---
# Source: mlflow/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  labels:
    app.kubernetes.io/name: mlflow
    helm.sh/chart: mlflow-1.4.0
    app.kubernetes.io/instance: mlflow
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mlflow
      app.kubernetes.io/instance: mlflow
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mlflow
        app.kubernetes.io/instance: mlflow
    spec: 
      affinity:
        nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                  - key: "kubernetes.io/hostname"
                    operator: NotIn
                    values:
                      - kmaster
      imagePullSecrets:
        - name: regcred
      containers:
        - name: mlflow
          image: "alvarogg777/arm64v8:nvidia-l4t-base-32.5"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          command:
            - "/usr/local/bin/mlflow"
          args:
            - "server"
            - "--backend-store-uri=postgresql://$(PGUSER):$(PGPASSWORD)@$(PGHOST):5432/mlflow"
            - "--default-artifact-root=$(DEFAULT_ARTIFACT_ROOT)"
          env:
          - name: PGPASSWORD             
            valueFrom:        
                secretKeyRef:  
                  key: POSTGRES_PASSWORD  
                  name: storage-secrets   
          - name: PGUSER                 
            valueFrom:    
                secretKeyRef:  
                  key: POSTGRES_USER  
                  name: storage-secrets  
          - name: PGHOST                 
            valueFrom:    
                secretKeyRef:  
                  key: POSTGRES_HOST  
                  name: storage-secrets  
          - name: PGDATABASE             
            value: bentoml  
          - name: DEFAULT_ARTIFACT_ROOT
            value: s3://mlflow/artifacts
          - name: MLFLOW_S3_ENDPOINT_URL
            valueFrom:
              secretKeyRef:
                name: storage-secrets
                key: S3_ENDPOINT_URL
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: storage-secrets
                key: MINIO_ACCESS_KEY
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: storage-secrets
                key: MINIO_SECRET_KEY
          #livenessProbe:
          #  httpGet:
          #    path: /health
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /health
          #    port: http
          resources:
            {}
          # volumeMounts:
          #   - mountPath: "/export"
          #     name: minio
